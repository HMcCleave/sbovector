SBOVector is a quick project to implement a std::vector-esc vector /w a small buffer optimization using c++17

Future considerations:

Split implementation into compact/fast_iteration, where fast iteration has a DataType* to the data outside of the union allowing access calls with no branching.

Add Exception Handling, currently all exceptions (except conditionally bad_alloc [define SBOVECTOR_THROW_BAD_ALLOC=true to enable]) invoke terminate (throw in no-throw method),
there are static asserts (disabled via define SBOVECTOR_RELAX_EXCEPTION_REQUIREMENTS=true) that require DataType to be nothrow as required

Add tests insuring requirements on limits to operations where possible, the std::vector specification provides some performance guarentees, most of those can be applied to SBOVector with the obvious exception of swap/move not being able to guarentee nomove/nocopy.

C++ 20 - changes to std::vector API (mostly constexpr and range related)

C++ 20 - adds [[likely]] [[unlikely]], might be interesting investigating if those can be used on the compact version to always assume inline data for branch prediction and if so what performance implications that has.

Iteration Validation, currently just using raw pointers as iterators, see microsofts implementation of vector for an example of configurable iteration validation.
